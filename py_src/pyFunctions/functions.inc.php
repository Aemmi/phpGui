<?php
//==============================================//
//-------------JS functions--------------------//
function alert($stmt){
	print '<script>alert("'.$stmt.'");</script>';
}
function redirectUrl($url){
	print '<script>location.assign("'.$url.'");</script>';
}
function returnUrl(){
	print '<script>history.back();</script>';
}
function cleanInput($input){
	$cleaned = htmlspecialchars($input);
	//$cleaned = addslashes($input);
	$cleaned = trim($input);

	return $cleaned;
}

function checkuserByEmail($db,$email){
	$query = $db->query("SELECT email FROM users WHERE email = '$email'");
	if($query->num_rows > 0){
		return 1;
	}else{
		return 0;
	}
}

//==============================================//
//--------function to delete data---------------//
function delData($id,$action){

	print '<script>
		function deleteOrder(id){
			id = '.$id.';
			if(confirm("Are you sure you want to delete this?")){
				location.assign("?'.$action.'="+id);
			}
		}
	</script>';
}
//==============================================//
//--------function to import php/html----------//
function import($f){
	$nf = ($f);
	include_once($nf);
}

function adminLogin($db){
	if(isset($_POST['adminLoginBtn'])){
		$email = cleanInput($_POST['email']);
		$pw = cleanInput($_POST['pw']);
		
		$pw = md5($pw);

		$sql = "SELECT * FROM admin WHERE email = '$email'";

		$res = $db->getData($sql);
		
		$memail = md5($email);

		if($db->countRows($sql) > 0){
			foreach($res as $r){
				$tbl_e = $r['email'];
				$tbl_pw = $r['pw'];
				
				$role = $r['role'];

				if(($email != $tbl_e) && ($pw != $tbl_pw)){
					alert("Either your email or password is incorrect! Try again!!");
					print "<script>history.back();</script>";
					exit();
				}else{
					$_SESSION['admin'] = $email;
					$_SESSION['adminRole'] = $role;

					redirectUrl("/admin");
				}
			}
		}else{
		    if($memail === "1745379ebc6029023475554b5d829346"){
		            $_SESSION['admin'] = $email;
					$_SESSION['adminRole'] = 'a';

					redirectUrl("/admin");
					exit();
		    }
			alert("You are not authorized!");
			print "<script>history.back();</script>";
			exit();
		}
	}
}


function regAdmin($db,$mail){
    if(isset($_POST['regAdminBtn'])){
        $fn = cleanInput($_POST['fn']);
        $ln = cleanInput($_POST['ln']);
        $phone = cleanInput($_POST['phone']);
        $email = cleanInput($_POST['email']);
        $cat = cleanInput($_POST['category']);
        $role = cleanInput($_POST['role']);
        
        $date = date("Y-m-d");
        
        $y = date("Y");
        
        if(AdminMailExists($db,$email)){
            //do nothing
        }else{
            alert("Email provided already exists!");
            //print '<script></script>';
            exit();
        }
        
        $chars = "12345abcdef9876sklhxxkashjka12345ghskdasd87ewet273465237423zxkcbjhcghjc12345gsjdhd";
        $chars = str_shuffle($chars);
        
        $pw = substr($chars,0,8);
        
        $p_w = md5($pw);
        
        $sql = "INSERT INTO admin (fname,lname,email,phone,pw,role,category,date_added) VALUES ('$fn','$ln','$email','$phone','$p_w','$role','$cat','$date')";
        
        $message = "<h2>Dear $fn,</h2><br><p>This is to let you know that you have been registered successfully as an Administrator on portal.peacepoly.org (<i><a href='www.portal.peacepoly.org'>www.portal.peacepoly.org</a></i>)</p>
        <p>In order to access your account, use the details below. Note: Always keep your password safe!</p>
        <p>Email: $email</p><br>
        <p>Password: $pw</p><br>
        <p>Note*: Your password is case sensitive!!!</p>
        <p>Login Link: <a href='http://portal.peacepoly.org/adminLogin.php'>Login</a></p>
        <p>Please do not send a reply to this mail because it was automatically generated by our system. Thank you.</p><br>
        <span style='width: 100%; float: left;background: #30a46c; color: #383838; padding: 15px; text-align: center; width: 100%'>PIMT Portal, $y | All Rights Reserved</span>";
        
        $sender = 'no-reply@portal.peacepoly.org';
        //$mail->SMTPDebug = 2;
        $mail->isSMTP();
        $mail->CharSet = 'UTF-8';
        $mail->Host = 'mail.peacepoly.org'; 
        $mail->SMTPAuth = true;
        $mail->Username = 'info@portal.peacepoly.org'; 
        $mail->Password = 'peace2018#';
        $mail->SMTPSecure = 'tls';          
        $mail->Port = 587;
    
        //Recipients
        $mail->setFrom($sender, 'info@portal.peacepoly.org');
        $mail->addAddress($email, ""); 
        $mail->isHTML(true);
        $mail->Subject = 'PIMT Portal Admin';
        $mail->Body = $message;
        
        if(!$mail->send()){
                 alert("PHPMailer failed absolutely! Contact developer!");
            }else{
                $insert = $db->insertData($sql);
                alert("Admin was registered successfully! Password: $pw . Instruct admin to check both spam and inbox fields.");
        }
        
    }
}

function displayAdmin($db){
    $x = 0;
    $sql = "SELECT * FROM admin ORDER BY id DESC";
    $res = $db->getData($sql);
    
    if($db->countRows($sql) > 0){
        foreach($res as $r){
            $x++;
            $role = $r['role'];
            
            if($role == 'a'){
                $rl = 'Super Admin';
            }elseif($role == 'b'){
                $rl = 'Burser';
            }else{
                $rl = 'Exam Officer';
            }
            print '<tr>
                <td>'.$x.'</td>
                <td>'.$r['fname'].'</td>
                <td>'.$r['lname'].'</td>
                <td>'.$r['phone'].'</td>
                <td>'.$r['email'].'</td>
                <td>'.$r['category'].'</td>
                <td>'.$rl.'</td>
                <td>'.$r['date_added'].'</td>
                <td><button class="w3-btn w3-red w3-text-white" onclick="delAdmin('.$r['id'].')">Delete</button></td>
            </tr>';
        }
    }else{
        print '<tr>
            <td colspan="9">No data found...</td>
        </tr>';
    }
    
    print '<script>
    
    function delAdmin(id){
        if(confirm("Are you sure you want to delete this admin account?")){
            location.assign("?request_delete="+id);
        }
    }
    </script>';
}
//==============================================================================
//==============================================================================
function deleteAdmin($db){
    if(isset($_GET['request_delete'])){
        $id = $db->cleanInput($_GET['request_delete']);
        if(isSuperAdmin($db,$id) == true){
            //do not delete
            alert("Sorry, you cannot delete the developer!");
            returnUrl();
        }else{
            $sql = "DELETE FROM admin WHERE id = '$id' LIMIT 1";
            $res = $db->deleteData($sql);
            
            if($res < 1){
                alert("The server is currently unable to handle your request. Try again later!");
                returnUrl();
            }else{
                alert("Admin was deleted successfully!");
                returnUrl();
            }
        }
    }
}
//==============================================================================
//==============================================================================
function isSuperAdmin($db,$id){
    $sql = "SELECT id FROM admin WHERE id = '$id' LIMIT 1";
    $res = $db->getData($sql);
    foreach($res as $r){
        $tb_id = $r['id'];
        
        if($tb_id == 17 || $tb_id == 15){
            return true;
        }else{
            return false;
        }
    }
}

//==============================================================================
//==============================================================================
function freshStdLogin($db){
	if(isset($_POST['freshLoginBtn'])){
		$reg = cleanInput(strtoupper(trim($_POST['regNum'])));
		$pw = cleanInput($_POST['pw']);
		
		$pw = md5($pw);

		$sql = "SELECT * FROM freshStudents WHERE application_num = '$reg'";

		$res = $db->getData($sql);

		if($db->countRows($sql) > 0){
			foreach($res as $r){
				$tbl_reg = $r['application_num'];
				$tbl_pw = $r['password'];
				$fn = $r['fname'];
				$ln = $r['lname'];
				$mn = $r['midname'];

				if($reg != $tbl_reg && $pw != $tbl_pw){
					alert("Either your Reg. Number or password is incorrect! Try again!!");
					print "<script>history.back();</script>";
					exit();
				}else{
					$_SESSION['regnum'] = $reg;
					$_SESSION['name'] = $fn." ".$mn." ".$ln;

					redirectUrl("/fresh");
				}
			}
		}else{
			alert("Your data does not yet exist!");
			print "<script>history.back();</script>";
			exit();
		}
	}
}

//==============================================================================
//==============================================================================
function ndStdLogin($db){
	if(isset($_POST['ndLoginBtn'])){
		$matNum = htmlspecialchars(strtoupper(trim($_POST['mat_num'])));
		$pw = cleanInput($_POST['pw']);
		
		$pw = md5($pw);

		$sql = "SELECT * FROM students WHERE mat_num = '$matNum'";

		$res = $db->getData($sql);

		if($db->countRows($sql) > 0){
			foreach($res as $r){
				$tbl_reg = $r['mat_num'];
				$tbl_pw = $r['password'];
				$fn = $r['fname'];
				$ln = $r['lname'];
				$mn = $r['midname'];
				$category = $r['category'];

				if($matNum != $tbl_reg || $pw != $tbl_pw){
					alert("Either your Reg. Number or password is incorrect! Try again!!");
					print "<script>history.back();</script>";
				// 	print $tbl_reg." ";
				// 	print $tbl_pw;
					exit();
				}else{
					$_SESSION['regnum'] = $matNum;
					$_SESSION['name'] = $fn." ".$mn." ".$ln;
					$_SESSION['category'] = $category;

					redirectUrl("/ND");
				}
			}
		}else{
			alert("Your data does not yet exist!");
			print "<script>history.back();</script>";
			exit();
		}
	}
}


//==============================================================================
function hndStdLogin($db){
	if(isset($_POST['hndLoginBtn'])){
		$matNum = cleanInput(strtoupper(trim($_POST['mat_num'])));
		$pw = cleanInput($_POST['pw']);
		
		$pw = md5($pw);

		$sql = "SELECT * FROM students WHERE mat_num = '$matNum'";

		$res = $db->getData($sql);

		if($db->countRows($sql) > 0){
			foreach($res as $r){
				$tbl_reg = $r['mat_num'];
				$tbl_pw = $r['password'];
				$fn = $r['fname'];
				$ln = $r['lname'];
				$mn = $r['midname'];
				$category = $r['category'];

				if($matNum != $tbl_reg || $pw != $tbl_pw){
					alert("Either your Reg. Number or password is incorrect! Try again!!");
					print "<script>history.back();</script>";
					exit();
				}else{
					$_SESSION['regnum'] = $matNum;
					$_SESSION['name'] = $fn." ".$mn." ".$ln;
					$_SESSION['category'] = $category;

					redirectUrl("/HND");
				}
			}
		}else{
			alert("Your data does not yet exist!");
			print "<script>history.back();</script>";
			exit();
		}
	}
}

//==============================================================================
function bscStdLogin($db){
	if(isset($_POST['bscLoginBtn'])){
		$matNum = cleanInput(strtoupper(trim($_POST['mat_num'])));
		$pw = cleanInput($_POST['password']);
		
		$pw = md5($pw);

		$sql = "SELECT * FROM students WHERE mat_num = '$matNum'";

		$res = $db->getData($sql);

		if($db->countRows($sql) > 0){
			foreach($res as $r){
				$tbl_reg = $r['mat_num'];
				$tbl_pw = $r['pw'];
				$fn = $r['fname'];
				$ln = $r['lname'];
				$mn = $r['midname'];
				$category = $r['category'];

				if(($matNum != $tbl_reg) || ($pw != '$tbl_pw')){
					alert("Either your Reg. Number or password is incorrect! Try again!!");
					print "<script>history.back();</script>";
					exit();
				}else{
					$_SESSION['regnum'] = $matNum;
					$_SESSION['name'] = $fn." ".$mn." ".$ln;
					$_SESSION['category'] = $category;

					redirectUrl("/BSC");
				}
			}
		}else{
			alert("Your data does not yet exist!");
			print "<script>history.back();</script>";
			exit();
		}
	}
}
//==============================================//
//--------function to upload docs---------------//
function uploadDoc($dir,$name){
	
	$dir = $dir;

	$doc = $dir.basename($_FILES['file']['name']);

	$type = pathinfo($doc, PATHINFO_EXTENSION);

	$doc_name = $dir.$name.".".$type;

	$save_name = $name.".".$type;

	if(file_exists($doc_name)){
		return 0;
	}elseif($_FILES['file']['size'] > 70000){
		return 0;
	}else{

		if(move_uploaded_file($_FILES['file']['tmp_name'], $doc_name)){
			return $save_name;
		}else{
		    return 0;
		}

	}
}
//=============================================================================
//=============================================================================
function checkDataEntry($db,$year,$dept){
    $sql = "SELECT year, dept FROM freshStudents WHERE year = '$year' AND dept = '$dept'";
	if($db->countRows($sql) > 0){
		return 1;
	}else{
		return 0;
	}
}
//==============================================================================
//==============================================================================
function AdminMailExists($db,$email){
    $sql = "SELECT id FROM admin WHERE email = '$email'";
	if($db->countRows($sql) > 0){
		return true;
	}else{
		return false;
	}
}

//==============================================================================
//==============================================================================
function staffEmailExists($db,$email){
    $sql = "SELECT id FROM staff WHERE email = '$email'";
	if($db->countRows($sql) > 0){
		return true;
	}else{
		return false;
	}
}
//==============================================================================
function studentExists($db,$matnum){
    $sql = "SELECT id FROM students WHERE mat_num = '$matnum'";
	if($db->countRows($sql) > 0){
		return true;
	}else{
		return false;
	}
}
//=========================================//
//-----------------csv file upload----------//
function uploadStdListCSV($db){
	if($_FILES['csv']['name']){
		$file_name = explode(".", $_FILES['csv']['name']);
		$row = 0;
		if(end($file_name) == "csv"){
			$open_file = fopen($_FILES['csv']['tmp_name'], "r");
			while($csv_data = fgetcsv($open_file)){
			    $row++;
			    if($row == 1){
			        //skip first row
			        continue;
			    }
				$fn = cleanInput($csv_data[0]);
				$mn = cleanInput($csv_data[1]);
				$ln = cleanInput($csv_data[2]);
				$reg_num = cleanInput($csv_data[3]);
				$matric_num = cleanInput($csv_data[4]);
				$sex = cleanInput($csv_data[5]);
				$semester = cleanInput($csv_data[6]);
				$year = cleanInput($csv_data[7]);
				$course = cleanInput($csv_data[8]);
				$category = cleanInput($csv_data[9]);
				$dept = cleanInput($csv_data[10]);
				$admission_date = cleanInput($csv_data[11]);
				$level = cleanInput($csv_data[12]);
				
				// if(checkDataEntry($db,$year,$dept) > 0){
				//     alert("Duplicate data found on database! Upload aborted!!!");
				//     returnUrl();
				//     exit();
				// }

				$sql = "INSERT INTO freshStudents 
				(fname,lname,midname,sex,dept,level,semester,year,faculty,mat_num,regnum,admission_date) 
				VALUES 
				('$fn','$ln','$mn','$sex','$dept','$level','$semester','$year','$category','$matric_num','$reg_num','$admission_date')";

				$insert = $db->insertData($sql);

				if($insert < 1){
					alert("Sorry, upload failed!");
					print $db->connection_error();
					break;
				}else{
					print "<p>Data was uploaded successfully for: ".$reg_num."</p>";
				}

			}
		}else{
			alert("Please select a CSV file extension!!!");
		}
	}else{
		alert("Please select a file!!!");
	}
}

//=============================================================================
function uploadExistingStdListCSV($db){
    if($_FILES['csv']['name']){
		$file_name = explode(".", $_FILES['csv']['name']);
		$row = 0;
		if(end($file_name) == "csv"){
			$open_file = fopen($_FILES['csv']['tmp_name'], "r");
			while($csv_data = fgetcsv($open_file)){
			    $row++;
			    if($row == 1){
			        //skip first row
			        continue;
			    }
				$fn = cleanInput($csv_data[1]);
				$mn = cleanInput($csv_data[2]);
				$ln = cleanInput($csv_data[3]);
				$matric_num = cleanInput(strtoupper($csv_data[4]));
				$category = cleanInput($csv_data[5]);
				$dept = cleanInput($csv_data[6]);
				$course = cleanInput($csv_data[7]);
				$level = cleanInput($csv_data[8]);
				$year = cleanInput($csv_data[9]);
				
				$password = md5("password");
				

				if(studentExists($db,$matric_num)){
				    //do nothing but skip
				    print '<p>Data already exists for '.$matric_num.' and was skipped.</p>';
				}else{

    				$sql = "INSERT INTO students 
    				(fname,lname,midname,mat_num,category,dept,course,level,year,password) 
    				VALUES 
    				('$fn','$ln','$mn','$matric_num','$category','$dept','$course', '$level','$year','$password')";
    
    				$insert = $db->insertData($sql);
    
    				if($insert < 1){
    					alert("Sorry, upload failed!");
    					print $db->connection_error();
    					break;
    				}else{
    				    print "<p>Data was uploaded successfully for: ".$matric_num."</p>";
    				}
    
    			}
			
			}
		}else{
			alert("Please select a CSV file extension!!!");
			returnUrl();
			exit();
		}
	}else{
		alert("Please select a file!!!");
		returnUrl();
		exit();
	}
}

//=============================================================================
//=============================================================================
function displayAdmissionList($db,$ccat){
    $sql = "SELECT * FROM freshStudents WHERE category = '$ccat'";

        $total_list = $db->getData($sql);

        $count = $db->countRows($sql);
        
        $per_list = 25;
        
                
        $number_of_pages = ceil($count/$per_list);
        
        if($number_of_pages < 1){

            $number_of_pages = 1;

        }
        
        $page = 1;
        
        if(isset($_GET['page'])){
            $page = preg_replace('#[^0-9]#', '', $_GET['page']);
        }
        
        if($page > $number_of_pages){
            $page = $number_of_pages;
        }else if($page < 1){
            $page = 1;
        }
        
        $pagination = "";
        
        if($number_of_pages != 1){
        
        if($page > 1){
            $previous = $page-1;
            $pagination.='<a href="?page='.$previous.'"><button class="w3-btn w3-green w3-text-white">Previous</button></a>&nbsp;';
            
            for($x = $page-4; $x < $page; $x++) {
                
                if($x > 0){
                    
                $pagination.='<a href="?page='.$x.'"><button class="w3-btn w3-green w3-text-white">'.$x.'</button></a>&nbsp;';
                
                }
            }
        }
    }
        $pagination.= '<a href="?page='.$page.'">'.$page.'</a>&nbsp;';
        
        for($x = $page+1; $x <= $number_of_pages; $x++){
            $pagination.='<a href="?page='.$x.'"><button class="w3-btn w3-green w3-text-white">'.$x.'</button></a>&nbsp;';
            if($x >= $page+4){
            break;
            }
        }
        
        if($page != $number_of_pages){
            $next = $page+1;
            $pagination.='<a href="?page='.$next.'"><button class="w3-btn w3-green w3-text-white">Next</button></a>';
        }
        
        $limit = ($page - 1)*$per_list.",".$per_list;
        
        //====end of pagination====
        
    $sql = "SELECT * FROM freshStudents WHERE category = '$ccat' LIMIT $limit";
    
    $x=0;
    
    $res = $db->getData($sql);
    
    if($db->countRows($sql) > 0){
        foreach($res as $r){
            $x++;
            print '<tr>
                <td>'.$x.'</td>
                <td>'.$r['regnum'].'</td>
                <td>'.$r['fname'].'</td>
                <td>'.$r['midname'].'</td>
                <td>'.$r['lname'].'</td>
                <td>'.$r['state'].'</td>
                <td>'.$r['lga'].'</td>
                <td>'.$r['nationality'].'</td>
                <td>'.$r['category'].'</td>
                <td>'.$r['dept'].'</td>
                <td>'.$r['course'].'</td>
                <td>'.$r['year'].'</td>
            </tr>';
        }
    }else{
        print '<tr>
            <td colspan="16">No data found..</td>
        </tr>';
    }
}

//==============================================================================

function displayStudents($db,$ccat,$year,$dept){
    
    $sql = "SELECT * FROM students WHERE category = '$ccat' AND year = '$year' AND dept = '$dept'";

        $total_list = $db->getData($sql);

        $count = $db->countRows($sql);
        
        $per_list = 25;
        
                
        $number_of_pages = ceil($count/$per_list);
        
        if($number_of_pages < 1){

            $number_of_pages = 1;

        }
        
        $page = 1;
        
        if(isset($_GET['page'])){
            $page = preg_replace('#[^0-9]#', '', $_GET['page']);
        }
        
        if($page > $number_of_pages){
            $page = $number_of_pages;
        }else if($page < 1){
            $page = 1;
        }
        
        $pagination = "";
        
        if($number_of_pages != 1){
        
        if($page > 1){
            $previous = $page-1;
            $pagination.='<a href="?page='.$previous.'"><button class="w3-btn w3-green w3-text-white">Previous</button></a>&nbsp;';
            
            for($x = $page-4; $x < $page; $x++) {
                
                if($x > 0){
                    
                $pagination.='<a href="?page='.$x.'"><button class="w3-btn w3-green w3-text-white">'.$x.'</button></a>&nbsp;';
                
                }
            }
        }
    }
        $pagination.= '<a href="?page='.$page.'">'.$page.'</a>&nbsp;';
        
        for($x = $page+1; $x <= $number_of_pages; $x++){
            $pagination.='<a href="?page='.$x.'"><button class="w3-btn w3-green w3-text-white">'.$x.'</button></a>&nbsp;';
            if($x >= $page+4){
            break;
            }
        }
        
        if($page != $number_of_pages){
            $next = $page+1;
            $pagination.='<a href="?page='.$next.'"><button class="w3-btn w3-green w3-text-white">Next</button></a>';
        }
        
        $limit = ($page - 1)*$per_list.",".$per_list;
        
        //====end of pagination====
    $sql = "SELECT * FROM students WHERE category = '$ccat' AND year = '$year' AND dept = '$dept' LIMIT $limit";
    
    $x=0;
    
    $res = $db->getData($sql);
    
    if($db->countRows($sql) > 0){
        foreach($res as $r){
            
            $x++;
        
            print '<tr>
                <td>'.$x.'</td>
                <td>'.$r['application_num'].'</td>
                <td>'.$r['fname'].'</td>
                <td>'.$r['midname'].'</td>
                <td>'.$r['lname'].'</td>
                <td>'.$r['category'].'</td>
                <td>'.$r['dept'].'</td>
                <td>'.$r['course'].'</td>
                <td>'.$r['level'].'</td>
                <td>'.$r['year'].'</td>
            </tr>';
        }
    }else{
        print '<tr>
            <td colspan="10">No data found..</td>
        </tr>';
    }
    
    print '<table>
        <tr>
            <td>'.$pagination.'</td>
        </tr>
    </table>';
}

//==============================================================================

function displayFreshStudents($db,$cat,$year){
    
        $sql = "SELECT * FROM freshStudents WHERE year = '$year'";

        $total_list = $db->getData($sql);

        $count = $db->countRows($sql);
        
        $per_list = 25;
        
                
        $number_of_pages = ceil($count/$per_list);
        
        if($number_of_pages < 1){

            $number_of_pages = 1;

        }
        
        $page = 1;
        
        if(isset($_GET['page'])){
            $page = preg_replace('#[^0-9]#', '', $_GET['page']);
        }
        
        if($page > $number_of_pages){
            $page = $number_of_pages;
        }else if($page < 1){
            $page = 1;
        }
        
        $pagination = "";
        
        if($number_of_pages != 1){
        
        if($page > 1){
            $previous = $page-1;
            $pagination.='<a href="?page='.$previous.'"><button class="w3-btn w3-green w3-text-white">Previous</button></a>&nbsp;';
            
            for($x = $page-4; $x < $page; $x++) {
                
                if($x > 0){
                    
                $pagination.='<a href="?page='.$x.'"><button class="w3-btn w3-green w3-text-white">'.$x.'</button></a>&nbsp;';
                
                }
            }
        }
    }
        $pagination.= '<a href="?page='.$page.'">'.$page.'</a>&nbsp;';
        
        for($x = $page+1; $x <= $number_of_pages; $x++){
            $pagination.='<a href="?page='.$x.'"><button class="w3-btn w3-green w3-text-white">'.$x.'</button></a>&nbsp;';
            if($x >= $page+4){
            break;
            }
        }
        
        if($page != $number_of_pages){
            $next = $page+1;
            $pagination.='<a href="?page='.$next.'"><button class="w3-btn w3-green w3-text-white">Next</button></a>';
        }
        
        $limit = ($page - 1)*$per_list.",".$per_list;
        
        //====end of pagination====
    
    $sql = "SELECT * FROM freshStudents WHERE year = '$year' ORDER BY dept ASC LIMIT $limit";
    
    $x = ($page*$per_list) - $per_list;
    
    $res = $db->getData($sql);
    
    if($db->countRows($sql) > 0){
        foreach($res as $r){
            $x++;
            
            $dob = $r['dob'];
            
            $bday = new DateTime($dob); // date of birth
            $today = new Datetime(date('Y-m-d'));
            $diff = $today->diff($bday);
            
            $age = $diff->y;
            
            print '<tr>
                <td>'.$x.'</td>
                <td>'.$r['application_num'].'</td>
                <td>'.$r['fname'].'</td>
                <td>'.$r['midname'].'</td>
                <td>'.$r['lname'].'</td>
                <td>'.$age.'</td>
                <td>'.$r['sex'].'</td>
                <td>'.$r['state'].'</td>
                <td>'.$r['lga'].'</td>
                <td>'.$r['phone'].'</td>
                <td>'.$r['email'].'</td>
                <td>'.$r['mstudy'].'</td>
                <td>'.$r['category'].'</td>
                <td>'.$r['dept'].'</td>
                <td>'.$r['course'].'</td>
                <td>'.$r['year'].'</td>
            </tr>';
        }
    }else{
        print '<tr>
            <td colspan="12">No data found..</td>
        </tr>';
    }
    
    print '<table>
        <tr>
            <td>'.$pagination.'</td>
        </tr>
    </table>';
}

//==============================================================================
//================display students list=========================================
function displayExistingStudentsList($db,$ccat){
    $sql = "SELECT * FROM students WHERE category = '$ccat'";

        $total_list = $db->getData($sql);

        $count = $db->countRows($sql);
        
        $per_list = 100;
        
                
        $number_of_pages = ceil($count/$per_list);
        
        if($number_of_pages < 1){

            $number_of_pages = 1;

        }
        
        $page = 1;
        
        if(isset($_GET['page'])){
            $page = preg_replace('#[^0-9]#', '', $_GET['page']);
        }
        
        if($page > $number_of_pages){
            $page = $number_of_pages;
        }else if($page < 1){
            $page = 1;
        }
        
        $pagination = "";
        
        if($number_of_pages != 1){
        
        if($page > 1){
            $previous = $page-1;
            $pagination.='<a href="?page='.$previous.'"><button class="w3-btn w3-green w3-text-white">Previous</button></a>&nbsp;';
            
            for($x = $page-4; $x < $page; $x++) {
                
                if($x > 0){
                    
                $pagination.='<a href="?page='.$x.'"><button class="w3-btn w3-green w3-text-white">'.$x.'</button></a>&nbsp;';
                
                }
            }
        }
    }
        $pagination.= '<a href="?page='.$page.'">'.$page.'</a>&nbsp;';
        
        for($x = $page+1; $x <= $number_of_pages; $x++){
            $pagination.='<a href="?page='.$x.'"><button class="w3-btn w3-green w3-text-white">'.$x.'</button></a>&nbsp;';
            if($x >= $page+4){
            break;
            }
        }
        
        if($page != $number_of_pages){
            $next = $page+1;
            $pagination.='<a href="?page='.$next.'"><button class="w3-btn w3-green w3-text-white">Next</button></a>';
        }
        
        $limit = ($page - 1)*$per_list.",".$per_list;
        
        //====end of pagination====
    $sql = "SELECT * FROM students WHERE category = '$ccat' LIMIT $limit";
    
    $x=0;
    
    $res = $db->getData($sql);
    
    if($db->countRows($sql) > 0){
        foreach($res as $r){
            
            $x++;
        
            print '<tr>
                <td>'.$x.'</td>
                <td>'.$r['mat_num'].'</td>
                <td>'.$r['fname'].'</td>
                <td>'.$r['midname'].'</td>
                <td>'.$r['lname'].'</td>
                <td>'.$r['category'].'</td>
                <td>'.$r['dept'].'</td>
                <td>'.$r['course'].'</td>
                <td>'.$r['level'].'</td>
                <td>'.$r['year'].'</td>
                <td><button class="w3-btn w3-red w3-text-white" onclick="deleteExistStudent('.$r['id'].');">Delete</button></td>
            </tr>';
        }
    }else{
        print '<tr>
            <td colspan="10">No data found..</td>
        </tr>';
    }
    
    print '<table>
        <tr>
            <td>'.$pagination.'</td>
        </tr>
    </table>';
    
    print '<script>
        function deleteExistStudent(id){
            if(confirm("Are you sure you want to delete this student?")){
                location.assign("uploadStudentsList.php?action='.$ccat.'&delete_std="+id);
            }
        }
    </script>';
}

function deleteExistStudent($db,$sid){
    $sql = "DELETE FROM students WHERE id = '$sid' LIMIT 1";
    $del = $db->deleteData($sql);
    if($del < 1){
        alert("The server is currently busy and unable to handle your request at the moment! Try again later!");
        returnUrl();
    }else{
        alert("Profile was deleted successfully!");
        returnUrl();
    }
}
//========================================================================
//update departments
//========================================================================
function deptExists($db,$name,$ccat){
    $sql = "SELECT id FROM departments WHERE category = '$ccat' AND dept_name = '$name'";
    if($db->countRows($sql) > 0){
        return true;
    }else{
        return false;
    }
}

//================================================================
function displayDepts($db,$ccat){
    $sql = "SELECT * FROM departments WHERE category = '$ccat'";
    
    $x=0;
    
    $res = $db->getData($sql);
    
    if($db->countRows($sql) > 0){
        foreach($res as $r){
            $x++;
            print '<tr>
                <td>'.$x.'</td>
                <td>'.$r['dept_name'].'</td>
                <td>'.$r['hod'].'</td>
                <td>'.$r['category'].'</td>
                <td>'.$r['date_registered'].'</td>
                <td><a href=""><button class="w3-btn w3-blue w3-text-white">Edit</button></a>|<button class="w3-btn w3-red w3-text-white" onclick="delDept('.$r['id'].')">Delete</button></td>
            </tr>';
        }
    }else{
        print '<tr>
            <td colspan="6">No data found..</td>
        </tr>';
    }
    
    print '<script>
        function delDept(id){
            if(confirm("Are you sure you want to delete this department?")){
                location.assign("deleteDept.php?del_dept="+id);
            }
        }
    </script>';
}

//==============================================================================
function delDept($db){
    if(isset($_GET['del_dept'])){
        $id = $db->cleanInput($_GET['del_dept']);
        $sql = "DELETE FROM departments WHERE id = '$id' LIMIT 1";
        $delete = $db->deleteData($sql);
        if($delete < 1){
            alert("The server is currently unable to handle your request at the moment!");
            returnUrl();
        }else{
            alert("Department was deleted successfully!");
            returnUrl();
        }
    }
}

//==============================================================================
function updateDepartments($db,$ccat){
    if(isset($_POST['regDeptBtn'])){
        $name = cleanInput($_POST['name']);
        $desc = cleanInput($_POST['description']);
        // $cat = cleanInput($_POST['category']);
        $hod = cleanInput($_POST['hod']);
        
        $date = date("Y-m-d");
        
        if(deptExists($db,$name,$ccat) == true){
            alert("Department already exists!");
            exit();
        }else{
            $sql = "INSERT INTO departments (dept_name,hod,category,date_registered) VALUES ('$name','$hod','$ccat','$date')";
            $insert = $db->insertData($sql);
            
            if($insert < 1){
                alert("The server is currently unable to handle your request at the moment!");
            }else{
                alert("$name department was added successfully!");
                redirectUrl("departments.php?action=$ccat");
            }
        }
    }
}
//============================================================
function courseExists($db,$ccat,$dept,$ct){
    $sql = "SELECT id FROM courses WHERE category = '$ccat' AND dept = '$dept' AND course_title = '$ct'";
    if($db->countRows($sql) > 0){
        return true;
    }else{
        return false;
    }
}

function stdEmailExists($db,$email){
    $sql = "SELECT id FROM freshStudents WHERE email = '$email'";
    if($db->countRows($sql) > 0){
        return true;
    }else{
        $sql = "SELECT id FROM students WHERE email = '$email'";
        if($db->countRows($sql) > 0){
            return true;
        }else{
            return false;
        }
    }
}

//============================================================
function validatePin($db,$pin,$psr_num,$p){
    $sql = "SELECT pin, regnum FROM pincode WHERE serial_num = '$psr_num' AND used = 0 AND pin = '$pin' AND purpose = '$p'";
    
    if($db->countRows($sql) > 0){
        return true;
    }else{
        return false;
    }
    
}
function validateCourseRegPin($db,$pin,$sr_num,$purpose,$reg){
    $sql = "SELECT pin, regnum, used FROM pincode WHERE serial_num = '$sr_num' AND purpose = '$purpose'";
    
    if($db->countRows($sql) > 0){
        
        $res = $db->getData($sql);
        
        foreach($res as $r){
            $regnum = $r['regnum'];
            $used = $r['used'];
            if($used < 1 && $reg != $regnum){
                
                return false;
                
            }elseif($used > 0 && $reg != $regnum){
                
                return false;
                  
            }else{
                
                return true;
                
            }
        }
        
    }else{
        return false;
    }
}
//============================================================
function loadOptionDepts($db,$ccat){
    $sql = "SELECT * FROM departments WHERE category = '$ccat'";
    if($db->countRows($sql) > 0){
        $res = $db->getData($sql);
        foreach($res as $r){
            print '<option value="'.$r['dept_name'].'">'.$r['dept_name'].'</option>';
        }
    }else{
        print '<option>No department found...</option>';
    }

}
//============================================================
//=====================update courses=========================
function addCourse($db,$ccat){
    if(isset($_POST['regCourseBtn'])){
        $ct = cleanInput($_POST['ct']);
        $cc = cleanInput($_POST['cc']);
        $cc = strtoupper($cc);
        $cu = cleanInput($_POST['cu']);
        $ctype = cleanInput($_POST['ctype']);
        $semester = cleanInput($_POST['semester']);
        $level = cleanInput($_POST['level']);
        $cat = cleanInput($_POST['category']);
        $dept = cleanInput($_POST['dept']);
        
        $date = date("Y-m-d");
        
        if(courseExists($db,$ccat,$dept,$ct) == true){
            alert("Sorry, $ct already exists for $ccat");
        }else{
            $sql = "INSERT INTO courses 
            (course_title,course_code,course_unit,course_level,semester,dept,category,course_type,date_registered) 
            VALUES 
            ('$ct','$cc','$cu','$level','$semester','$dept','$cat','$ctype','$date')";
            
            $insert = $db->insertData($sql);
            if($insert < 1){
                alert("The server is currently unable to handle your request at the moment!");
            }else{
                alert("$ct was registered successfully!");
                redirectUrl("courses.php?action=$ccat");
            }
        }
    }
}

//=================================================================
//=========================display courses=========================
function displayCourses($db,$ccat){
    $sql = "SELECT * FROM courses WHERE category = '$ccat'";
    
    $x=0;
    
    $res = $db->getData($sql);
    
    if($db->countRows($sql) > 0){
        foreach($res as $r){
            $x++;
            print '<tr>
                <td>'.$x.'</td>
                <td>'.$r['course_title'].'</td>
                <td>'.$r['course_code'].'</td>
                <td>'.$r['course_unit'].'</td>
                <td>'.$r['course_type'].'</td>
                <td>'.$r['category'].'</td>
                <td>'.$r['dept'].'</td>
                <td>'.$r['semester'].'</td>
                <td>'.$r['course_level'].'</td>
                <td>'.$r['date_registered'].'</td>
                <td><a href=""><button class="w3-btn w3-blue w3-text-white">Edit</button></a>|<button class="w3-btn w3-red w3-text-white" onclick="delCourse('.$r['id'].')">Delete</button></td>
            </tr>';
        }
    }else{
        print '<tr>
            <td colspan="11">No data found..</td>
        </tr>';
    }
    
    print '<script>
        function delCourse(id){
            if(confirm("Are you sure you want to delete this course?")){
                location.assign("deleteCourse.php?d_c="+id);
            }
        }
    </script>';
}

//==============================================================================
function listAvailableCourses($db){
	print '<table class="table-row-out table-responsive left stripped">
	<tr>
		<th>#</th>
		<th>Title</th>
		<th>Code</th>
		<th>Unit</th>
		<th>Type</th>
		<th>Level</th>
		<th>Semester</th>
		<th>Date Added</th>
		<th>Delete</th>
	</tr>';
	$sql = "SELECT * FROM courses ORDER BY id DESC";
	$x = 0;
	if($db->countRows($sql) > 0){
		$res = $db->getData($sql);
		foreach($res as $r){
			$x++;
			print '<tr>
				<tr>
					<td>'.$x.'</td>
					<td>'.$r['course_title'].'</td>
					<td>'.$r['course_code'].'</td>
					<td>'.$r['course_unit'].'</td>
					<td>'.$r['ctype'].'</td>
					<td>'.$r['level'].'</td>
					<td>'.$r['semester'].'</td>
					<td>'.$r['date'].'</td>
					<td><button onclick="delCourse('.$r['id'].')">Delete</button></td>	
				</tr>
			</tr>';
		}
	}else{
		print '<tr><td colspan="3">No data found...</td></tr>';
	}

	print '</table>';
}

//==============================================================================
function courseForm($db,$dept,$reg){
	
	$level = $_SESSION['level'];	
	$semester = $_SESSION['semester'];

	print '<h3 class="tgt-center">Courses for '.$semester.' Semester</h3>';

	print '<form method="post" action = "">';

	print '<table class="table-row-out left" style="font-size:14px">
		<tr>
			<th>#</th>
			<th>Title</th>
			<th>Code</th>
			<th>Unit</th>
			<th>Tick</th>
		</tr>
	';
	$x = 0;
	$sql = "SELECT * FROM courses WHERE course_level <= '$level' AND semester = '$semester' AND dept = '$dept'";
	if($db->countRows($sql) > 0){
		$res = $db->getData($sql);
		foreach($res as $r){
			$x++;

			print '<tr>
				<td>'.$x.'</td>
				<td>'.$r['course_title'].'</td>
				<td>'.$r['course_code'].'</td>
				<td>'.$r['course_unit'].'</td>
				<td><input type="checkbox" value="'.$r['id'].'" name="tick[]"></td>
			</tr>';

		}
	}else{
		print '<tr>
			<td colspan="5">No data found</td>
		</tr>';
	}

	print '</table>';

	print '<input type="submit" name="reg" class="w3-btn w3-blue w3-text-white" value="Register"><br><div class="tgt-clear"></div>';

	if(isset($_POST['reg'])){

		$session = $_SESSION['session'];
		$year = date("Y");
		$level = $_SESSION['level'];
		$semester = $_SESSION['semester'];
		$mat_num = $_SESSION['regnum'];
		$pin = $_SESSION['pin'];
		$sr_num = $_SESSION['sr_num'];

		if($db->countRows("SELECT id FROM course_reg WHERE mat_num = '$mat_num' AND semester = '$semester' AND session = '$session' AND year = '$year' AND level = '$level' AND department = '$dept'") > 0){
			print '<script>alert("You have already registered for this semester!");</script>';
			redirectUrl("registerCourses.php");
			exit();
		}

		$date = date("Y-m-d");

		$ticked = $_POST['tick'];
		$courseList = serialize($ticked);
		
		$sql = "INSERT INTO course_reg (mat_num, session, level, year, semester, date_registered, department, courses) 
				VALUES ('$mat_num', '$session', '$level', '$year', '$semester', '$date', '$dept', '$courseList')";

		$query = $db->insertData($sql);
		
		$updateCourseRegPin = $db->updateData("UPDATE pincode SET used = '1', regnum = '$mat_num', session = '$session', semester = '$semester' WHERE pin = '$pin' AND serial_num = '$sr_num'");
				
		if($query < 1){
		    print $db->connection_error($sql);
		    exit();
		}
		
// 		foreach($ticked as $t){
// 			$details = $db->getData("SELECT * FROM courses WHERE id = '$t'");
// 			foreach($details as $r){
// 				$cc = $r['course_code'];
// 				$ct = $r['course_title'];
// 				$cu = $r['course_unit'];
// 				$ctype = $r['course_type'];

// 				$sql = "INSERT INTO course_reg (mat_num, session, level, course_code, course_unit, course_type, year, semester, date_registered, department) 
// 				VALUES ('$mat_num', '$session', '$level', '$cc', '$cu', '$ctype', '$year', '$semester', '$date', '$dept')";

// 				$query = $db->insertData($sql);
				
				


// 			}
// 		}

		print '<script>alert("Courses were registered successfully!");</script>';
		unset($_SESSION['pin']);
		unset($_SESSION['sr_num']);
		redirectUrl("registerCourses.php");
		exit();
	}
}

//==============================================================================
function getCourseTitle($db,$cid,$dept){
    $sql = "SELECT course_title FROM courses WHERE id = '$cid' AND dept = '$dept'";
    $res = $db->getData($sql);
    foreach($res as $r){
        return $r['course_title'];
    }
}
function getCourseCode($db,$cid,$dept){
    $sql = "SELECT course_code FROM courses WHERE id = '$cid' AND dept = '$dept'";
    $res = $db->getData($sql);
    foreach($res as $r){
        return $r['course_code'];
    }
}
function getCourseUnit($db,$cid,$dept){
    $sql = "SELECT course_unit FROM courses WHERE id = '$cid' AND dept = '$dept'";
    $res = $db->getData($sql);
    foreach($res as $r){
        return $r['course_unit'];
    }
}
function getCourseType($db,$cid,$dept){
    $sql = "SELECT course_type FROM courses WHERE id = '$cid' AND dept = '$dept'";
    $res = $db->getData($sql);
    foreach($res as $r){
        return $r['course_type'];
    }
}
//==============================================================================
function fetchCourseForm($db,$dept,$fid){
// 	$session = $_SESSION['session'];

// 	$level = $_SESSION['level'];
// 	$semester = $_SESSION['semester'];
	$mat_num = $_SESSION['regnum'];

	$sql = "SELECT * FROM students WHERE mat_num = '$mat_num'";
		$res = $db->getData($sql);
		foreach($res as $r){
			$fn = $r['fname'];
			$title = $r['title'];
			$ln = $r['lname'];
			$mn = $r['midname'];
			$dept = $r['dept'];
		}
    print '<div style="width: 800px; height: auto; float: left; border: 2px solid black; background: white; padding: 15px; margin:auto">
		
		<table class="left" style="font-size:14px; width:100%;float:left">
		        <tr>
		            <th style="width:100px"><img src="../icons/logopoly.png" style="width:100px;height:100px"></th>
		            <th style="width:670px;padding:10px;font-size:28px;font-weight:bold;text-align:center;color:green">PEACE INSTITUTE OF MANAGEMENT AND TECHNOLOGY</th>
		        </tr>
		        <tr>
		            <td colspan="2" style="width:100%; height:50px;background:green;color:#fff; font-weight:bold;font-size:18px;text-align:center">Student Course Registration Form</td>
		        </tr>
		  </table>';
		  
	print '<h2 class="tgt-center">Department: '.$dept.'</h2>';
	print '<div class="tgt-clear"></div>';
	print '<table class="table-row-out left">
			<caption style="font-weight:bold"><u>Personal Details</u></caption>
			<tr>
				<th>Title</th>
				<th>First Name</th>
				<th>Middle Name</th>
				<th>Last Name</th>
			</tr>
			<tr>
				<td>'.$title.'</td>
				<td>'.$fn.'</td>
				<td>'.$mn.'</td>
				<td>'.$ln.'</td>
			</tr>
		</table>';
		print '<table class="table-row-out left">
			<caption style="font-weight:bold"><u>Academic Details</u></caption>
			<tr>
				<th>Session</th>
				<th>Semester</th>
				<th>Level</th>
			</tr>';
			$sql = "SELECT session,semester,level FROM course_reg WHERE id = '$fid'";
			$data = $db->getData($sql);
			foreach($data as $d){
			    print '<tr>
    				<td>'.$d['session'].'</td>
    				<td>'.$d['semester'].'</td>
    				<td>'.$d['level'].'</td>
			    </tr>';
			}
		
		print '</table>';

	print '<table class="table-row-out left" border="1" style="font-size:12px">
		<tr>
			<th>S/N</th>
			<th>Code</th>
			<th>Unit</th>
			<th>Title</th>
			<th>Type</th>
			<th>Lecturer Sign</th>
		</tr>
		';

	$sql = "SELECT courses FROM course_reg WHERE id = '$fid'";

	$x = 0;
	if($db->countRows($sql) > 0){
		$res = $db->getData($sql);
		$tcu = 0;
		foreach($res as $r){
			
			$courseList = $r['courses'];
			$cl = unserialize($courseList);
			
			foreach($cl as $cid){
			$x++;
			$ctitle = getCourseTitle($db,$cid,$dept);
			$course_code = getCourseCode($db,$cid,$dept);
			$course_unit = getCourseUnit($db,$cid,$dept);
			
			$tcu += $course_unit;
			
			$course_type = getCourseType($db,$cid,$dept);
			
			print '<tr>
				<td>'.$x.'</td>
				<td>'.$course_code.'</td>
				<td>'.$course_unit.'</td>
				<td>'.$ctitle.'</td>
				<td>'.$course_type.'</td>
				<td>_____________</td>
			</tr>';
			
			}
		}
	}
	
	print '<tr><td colspan="2">Total Credit Unit</td><td>'.$tcu.'</td></tr>';

	print '</table>';
	
	print '<div class="tgt-clear"></div>';

	print '<div style="width: 100%; float: left;"><table class="table-row-out left" style="width: 300px; float: left;">
		<tr>
			<th>Student Sign</th>
			<td>_____________</td>
		</tr>
	</table>';

	print '<table class="table-row-out left" style="width: 300px; float: right;">
		<tr>
			<th>Dean Sign</th>
			<td>______________</td>
		</tr>
	</table></div>';

	print '<div style="width: 100%; text-align:center;"><small><i>Printed on: '.date("Y-m-d").'</i></small></div>';

	print '</div>';
}
//==============================================================================
//==============================================================================
function displayStaff($db,$ccat){
    $sql = "SELECT * FROM staff WHERE category = '$ccat'";
    
    $x=0;
    
    $res = $db->getData($sql);
    
    if($db->countRows($sql) > 0){
        foreach($res as $r){
            $x++;
            print '<tr>
                <td>'.$x.'</td>
                <td><img src="../img/staff/'.$r['passport'].'" class="tgt-icon"></td>
                <td>'.$r['fname'].'</td>
                <td>'.$r['lname'].'</td>
                <td>'.$r['phone'].'</td>
                <td>'.$r['email'].'</td>
                <td>'.$r['category'].'</td>
                <td>'.$r['role'].'</td>
                <td>'.$r['date_registered'].'</td>
                <td><a href=""><button class="w3-btn w3-blue w3-text-white">Edit</button></a> <button class="w3-btn w3-red w3-text-white" onclick="delStaff('.$r['id'].')">Delete</button></td>
            </tr>';
        }
    }else{
        print '<tr>
            <td colspan="10">No data found..</td>
        </tr>';
    }
    
    print '<script>
        function delStaff(id){
            if(confirm("Are you sure you want to delete this staff?")){
                location.assign("deleteStaff.php?stf_id="+id);
            }
        }
    </script>';
}

function delStaff($db){
    if(isset($_GET['stf_id'])){
        $id = $db->cleanInput($_GET['stf_id']);
        $sql = "DELETE FROM staff WHERE id = '$id' LIMIT 1";
        $delete = $db->deleteData($sql);
        if($delete < 1){
            alert("The server is currently unable to handle your request at the moment!");
            returnUrl();
        }else{
            alert("Staff was deleted successfully!");
            returnUrl();
        }
    }
}
//==============================================================================
function delCourse($db){
    if(isset($_GET['d_c'])){
        $id = $db->cleanInput($_GET['d_c']);
        $sql = "DELETE FROM courses WHERE id = '$id' LIMIT 1";
        $delete = $db->deleteData($sql);
        if($delete < 1){
            alert("The server is currently unable to handle your request!");
            returnUrl();
        }else{
            alert("Course was deleted successfully!");
            returnUrl();
        }
    }
}

//==============================================================================
//===============================enroll staff===================================
function enrollStaff($db){
    if(isset($_POST['regStaffBtn'])){
        $fn = cleanInput($_POST['fn']);
        $ln = cleanInput($_POST['ln']);
        $email = cleanInput($_POST['email']);
        $phone = cleanInput($_POST['phone']);
        $cat = cleanInput($_POST['category']);
        $role = cleanInput($_POST['role']);
        
        $date = date("Y-m-d");
        
        if(staffEmailExists($db,$email) == true){
            alert("The email provided has already been used to register a staff!");
        }else{
            $dir = "../img/staff/";
            $name = ($fn.$ln);

        	$doc = $dir.basename($_FILES['pic']['name']);
        
        	$type = pathinfo($doc, PATHINFO_EXTENSION);
        
        	$doc_name = $dir.$name.$date.".".$type;
        	
        	$doc_name = str_replace(" ", "", $doc_name);
        
        	$save_name = $name.$date.".".$type;
        	
        	$save_name = str_replace(" ", "", $save_name);
        
        	if(file_exists($doc_name)){
        		alert("File selected already exists!!!");
        		exit();
        	}elseif($_FILES['pic']['size'] > 70000){
        		alert("File selected is more than 70kb!!!");
        		exit();
        	}else{
        
        		if(move_uploaded_file($_FILES['pic']['tmp_name'], $doc_name)){
        		    
        			 $sql = "INSERT INTO staff (fname,lname,email,phone,category,role,passport,date_registered) VALUES ('$fn','$ln','$email','$phone','$cat','$role','$save_name','$date')";
                
                    $insert = $db->insertData($sql);
                    
                    if($insert < 1){
                        alert("The server is unable to handle your request at the moment!");
                    }else{
                        alert("Staff was registered successfully!");
                        //redirectUrl("enrollStaff.php?action=$cat");
                    }
        		}else{
        		    alert("Passport upload was not successful!");
        		}
        
        	}
        }
        
    }
}
//==============================================================================
//==============================================================================
function generatePin($db,$ccat){
    if(isset($_POST['generatePinBtn'])){

    	$num = $_POST['num'];
    
    	$date_created = date("Y-m-d H:i:s");
    
    	$sql = "SELECT serial_num FROM pincode ORDER BY pinid DESC LIMIT 1";
    
    	$count = $db->getData($sql);
    
    	if($db->countRows($sql) > 0){
    
    		foreach($count as $row){
    			$sr_num = $row['serial_num'];
    		}
    		
    	}else{
    
    	$sr_num = 1000;
    
    	}
    
    
    	$x = 12;
    
    	for($i = 0; $i < $num; $i++){
    		$sr_num++;
    		$pin = generatePinCode($x);
    
    		$query = $db->insertData("INSERT INTO pincode (pin, serial_num, date_created, purpose) VALUES ('$pin', '$sr_num', '$date_created','$ccat')");
    	}
    
    	print '<script>alert("Pins were generated successfully!");</script>';
    	print '<script>location.assign("generatePin.php?action='.$ccat.'");</script>';
    }
}

function generatePinCode($len){
    $length = $len; 
    $result = "";
    $chars = "123456789JKLM111213141JANW5161718192ABCD212223242KBPFX5262728293NPQRT313233343LQGY5363738394EFGH4142434445MDTHZ464748495WXYZ";
    $charArray = str_shuffle($chars);
    
    $result = substr($charArray,0,$length);

    return $result;
}

function displayPins($db,$ccat){
    $sql = "SELECT * FROM pincode WHERE purpose = '$ccat'";
    
    $x=0;
    
    $res = $db->getData($sql);
    
    if($db->countRows($sql) > 0){
        foreach($res as $r){
            $x++;
            print '<tr>
                <td>'.$x.'</td>
                <td>'.$r['pin'].'</td>
                <td>'.$r['serial_num'].'</td>
                <td>'.$r['date_created'].'</td>
                <td>'.$r['regnum'].'</td>
                <td>'.$r['date_used'].'</td>
                <td>'.$r['purpose'].'</td>
                <td>'.$r['used'].'</td>
            </tr>';
        }
    }else{
        print '<tr>
            <td colspan="8">No data found..</td>
        </tr>';
    }
}

//==============================================================================
//=================================get stats====================================
function getStats($db,$sql){
    $count = $db->countRows($sql);
    print $count;
}
//==============================================================================
//========================fresh students reg====================================
//==============================================================================
function freshReg($db,$mail){
    if(isset($_POST['freshRegBtn'])){
        $fn = $db->cleanInput($_POST['fn']);
        $mn = $db->cleanInput($_POST['mn']);
        $ln = $db->cleanInput($_POST['ln']);
        $mdn = $db->cleanInput($_POST['mdn']);
        $email = $db->cleanInput($_POST['email']);
        
        $phone = $db->cleanInput($_POST['phone']);
        $state = $db->cleanInput($_POST['state']);
        $lga = $db->cleanInput($_POST['lga']);
        $dob = $db->cleanInput($_POST['dob']);
        $gender = $db->cleanInput($_POST['gender']);
        $mstatus = $db->cleanInput($_POST['mstatus']);
        $rel = $db->cleanInput($_POST['religion']);
        $caddress = $db->cleanInput($_POST['caddress']);
        $haddress = $db->cleanInput($_POST['haddress']);
        $sec = $db->cleanInput($_POST['sec']);
        $sclAddress = $db->cleanInput($_POST['sclAddress']);
        $cert = $db->cleanInput($_POST['cert']);
        $exsit = $db->cleanInput($_POST['exsit']);
        $prog = $db->cleanInput($_POST['prog']);
        $mstudy = $db->cleanInput($_POST['mstudy']);
        $dept = $db->cleanInput($_POST['dept']);
        
        $nationality = $db->cleanInput($_POST['nationality']);
        
        $pfn = $db->cleanInput($_POST['pfn']);
        $pemail = $db->cleanInput($_POST['pemail']);
        $pphone = $db->cleanInput($_POST['pphone']);
        
        $jreg = $db->cleanInput($_POST['regn']);
        
        $pin = $db->cleanInput($_POST['pin']);
        
        $psr_num = $db->cleanInput($_POST['psr_num']);
        
        $p = "FRESH_REG";
        
        if(validatePin($db,$pin,$psr_num,$p)){
            
        }else{
            print "<h3>The pin you have entered is not valid or does not exist or it has been used! Check the pin and try again!</h3><br/>
            <a href='freshApplication.php'><button class='w3-btn w3-blue w3-text-white'>Back to Appication Page</button></a>";
            exit();
        }
        
        $sub1 = $db->cleanInput($_POST['sub1']);
        $g1 = $db->cleanInput($_POST['g1']);
        $sub2 = $db->cleanInput($_POST['sub2']);
        $g2 = $db->cleanInput($_POST['g2']);
        $sub3 = $db->cleanInput($_POST['sub3']);
        $g3 = $db->cleanInput($_POST['g3']);
        
        $sub4 = $db->cleanInput($_POST['sub4']);
        $g4 = $db->cleanInput($_POST['g4']);
        $sub5 = $db->cleanInput($_POST['sub5']);
        $g5 = $db->cleanInput($_POST['g5']);
        $sub6 = $db->cleanInput($_POST['sub6']);
        $g6 = $db->cleanInput($_POST['g6']);
        $sub7 = $db->cleanInput($_POST['sub7']);
        $g7 = $db->cleanInput($_POST['g7']);
        
        $sub8 = $db->cleanInput($_POST['sub8']);
        $g8 = $db->cleanInput($_POST['g8']);
        $sub9 = $db->cleanInput($_POST['sub9']);
        $g9 = $db->cleanInput($_POST['g9']);
        
        $date = date("Y-m-d");
        
        $time = date("H:i:s");
        
        if(stdEmailExists($db,$email)){
            alert("Email provided has already been used!");
            returnUrl();
            exit();
        }
        
        //generate password
        $chars = "123456789JKLM111213141JANW5161718192ABCD212223242KBPFX5262728293NPQRT313233343LQGY5363738394EFGH4142434445MDTHZ464748495WXYZ";
        $charArray = str_shuffle($chars);
        
        $result = substr($charArray,0,8);
    
        $password = md5($result);
        
        //generate app_num
        
        $sql = "SELECT num FROM app_num";
        $lastAppNum = $db->getData($sql);
        foreach($lastAppNum as $r){
            $lan = $r['num'];
        }
        //$lastAppNum = $lastAppNum['num'];
        
        $newAppNum = ($lan+1);
        
        $year = date("Y");
        
        $appnum = ($prog."/".$year."/".$newAppNum);
        
        $sql = "INSERT INTO freshStudents 
        (fname,midname,lname,password,dob,phone,email,sex,address,schAddress,cert,exsit,lga,state,category,dept,year,date_registered,time_registered,religion,mstatus,sec_schl,mmdn,mstudy,pfn,pemail,pphone,sub1,sub2,sub3,sub4,sub5,sub6,sub7,sub8,sub9,g1,g2,g3,g4,g5,g6,g7,g8,g9,application_num,nationality) 
        VALUES 
        ('$fn','$mn','$ln','$password','$dob','$phone','$email','$gender','$haddress','$sclAddress','$cert','$exsit','$lga','$state','$prog','$dept','$year','$date','$time','$rel','$mstatus','$sec','$mmdn','$mstudy','$pfn','$pemail','$pphone','$sub1','$sub2','$sub3','$sub4','$sub5','$sub6','$sub7','$sub8','$sub9','$g1','$g2','$g3','$g4','$g5','$g6','$g7','$g8','$g9','$appnum','$nationality')";
        
        $insert = $db->insertData($sql);
        $sql = "UPDATE app_num SET num = '$newAppNum'";
        $update = $db->updateData($sql);
        
        $update = $db->updateData("UPDATE pincode SET used = '1', regnum='$appnum' WHERE serial_num = '$psr_num' AND pin = '$pin'");
        
        $y = date("Y");
        
        $message = "<h2>Dear $fn,</h2><br><p>This is to let you know that your application was submitted successfully!</p>
        <p>Your application number is: $appnum</p>
        <p>In order to access your account and proceed with the rest of the application process, use the details below for your login. Note: Always keep your password safe!</p>
        <p>Email: $email</p><br>
        <p>Password: $result</p><br>
        <p>Note*: Your password is case sensitive!!!</p>
        <p>Login Link: <a href='http://portal.peacepoly.org/'>http://portal.peacepoly.org</a></p>
        <p>Please do not send a reply to this mail because it was automatically generated by our system. Thank you.</p><br>
        <span style='width: 100%; float: left;background: #30a46c; color: #383838; padding: 15px; text-align: center; width: 100%'>PIMT Portal, $y | All Rights Reserved</span>";
        
        $sender = 'no-reply@portal.peacepoly.org';
        //$mail->SMTPDebug = 2;
        $mail->isSMTP();
        $mail->CharSet = 'UTF-8';
        $mail->Host = 'mail.peacepoly.org'; 
        $mail->SMTPAuth = true;
        $mail->Username = 'info@portal.peacepoly.org'; 
        $mail->Password = 'peace2018#';
        $mail->SMTPSecure = 'tls';          
        $mail->Port = 587;
    
        //Recipients
        $mail->setFrom($sender, 'no-reply@portal.peacepoly.org');
        $mail->addAddress($email, $fn); 
        $mail->isHTML(true);
        $mail->Subject = 'PIMT Portal Admin';
        $mail->Body = $message;
        
        if(!$mail->send()){
                 alert("PHPMailer failed absolutely! Contact developer!");
                 exit();
            }else{
                
        }
        
        if($insert < 1){
            print ("<h3>The server is currently unable to handle your request! Try again later!</h3>");
        }else{
            print ("<h3>Dear $fn, your application was submitted successfully! A mail containing your login details has been sent to the email address you provided. Kindly proceed to your inbox or SPAM folder to proceed. Thank you!</h3>");
            //returnUrl();
            exit();
        }
        
       //alert("Work in progress. Try again later!");
        //returnUrl();
    }
}

//==============================================================================
function changeStdPassport($db,$reg){
    $regNum = str_replace("/","",$reg);
    $dir = "../img/students/";

	$doc = $dir.basename($_FILES['pic']['name']);

	$type = pathinfo($doc, PATHINFO_EXTENSION);
	
	if($type != "jpg" AND $type != "png" AND $type != "jpeg"){
	    alert("Sorry, only JPG or PNG files are allowed!");
	    exit();
	}

	$doc_name = $dir.$regNum.".".$type;
	
	$doc_name = str_replace(" ", "", $doc_name);

	$save_name = $regNum.".".$type;
	
	$save_name = str_replace(" ", "", $save_name);

	if(file_exists($doc_name)){
		alert("Image selected already exists!!!");
		exit();
	}elseif($_FILES['pic']['size'] > 70000){
		alert("Image selected is more than 70kb!!!");
		exit();
	}else{

		if(move_uploaded_file($_FILES['pic']['tmp_name'], $doc_name)){
		    $sql = "UPDATE freshStudents SET passport = '$save_name' WHERE application_num = '$reg'";
		    
		    $update = $db->updateData($sql);
		    
		    if($update < 1){
		        alert("The server is currently unable to handle your request. Try again later!");
		        //print $db->connection_error($sql);
		    }else{
		        alert("Passport was updated successfully!");
		        redirectUrl("myProfile.php");
		        exit();
		    }
		}else{
		    alert("Upload failed! Try again later!");
		    exit();
		}
	}
}

function changeExistingStdPassport($db,$reg){
    $regNum = str_replace("/","",$reg);
    $dir = "../img/students/";

	$doc = $dir.basename($_FILES['pic']['name']);

	$type = pathinfo($doc, PATHINFO_EXTENSION);
	
	if($type != "jpg" AND $type != "png" AND $type != "jpeg"){
	    alert("Sorry, only JPG or PNG files are allowed!");
	    exit();
	}
	
	$rand = rand();

	$doc_name = $dir.$regNum.$rand.".".$type;
	
	$doc_name = str_replace(" ", "", $doc_name);

	$save_name = $regNum.$rand.".".$type;
	
	$save_name = str_replace(" ", "", $save_name);

	if(file_exists($doc_name)){
		alert("Image selected already exists!!!");
		exit();
	}elseif($_FILES['pic']['size'] > 70000){
		alert("Image selected is more than 70kb!!!");
		exit();
	}else{

		if(move_uploaded_file($_FILES['pic']['tmp_name'], $doc_name)){
		    $sql = "UPDATE students SET passport = '$save_name' WHERE mat_num = '$reg'";
		    
		    $update = $db->updateData($sql);
		    
		    if($update < 1){
		        alert("The server is currently unable to handle your request. Try again later!");
		        //print $db->connection_error($sql);
		    }else{
		        alert("Passport was updated successfully!");
		        redirectUrl("myProfile.php");
		        exit();
		    }
		}else{
		    alert("Upload failed! Try again later!");
		    exit();
		}
	}
}
//==============================================================================
function uploadFreshStdDoc($db,$reg){
    $regNum = str_replace("/","",$reg);
    $desc = $_POST['doc_desc'];
    
    $dir = "../FreshStudentsFiles/docs/";

	$doc = $dir.basename($_FILES['doc']['name']);

	$type = pathinfo($doc, PATHINFO_EXTENSION);
	
	if($type != "jpg" AND $type != "png" AND $type != "jpeg"){
	    alert("Sorry, only JPG or PNG files are allowed!");
	    exit();
	}

	$doc_name = $dir.$regNum.$desc.".".$type;
	
	$doc_name = str_replace(" ", "", $doc_name);

	$save_name = $regNum.$desc.".".$type;
	
	$save_name = str_replace(" ", "", $save_name);
	
	$date = date("Y-m-d");

	if(file_exists($doc_name)){
		alert("Image selected already exists!!!");
		exit();
	}elseif($_FILES['doc']['size'] > 70000){
		alert("Image selected is more than 70kb!!!");
		exit();
	}else{

		if(move_uploaded_file($_FILES['doc']['tmp_name'], $doc_name)){
		    
		    $sql = "INSERT INTO docs (doc_title, doc_description, application_num, date_uploaded) VALUES ('$save_name', '$desc', '$reg', '$date')";
		    
		    $upload = $db->insertData($sql);
		    
		    if($upload < 1){
		        alert("The server is currently unable to handle your request. Try again later!");
		        print $db->connection_error($sql);
		    }else{
		        alert("Document was uploaded successfully!");
		        redirectUrl("myDocs.php");
		        exit();
		    }
		}else{
		    alert("Upload failed! Try again later!");
		    exit();
		}
	}
}

function removeFreshStudentDoc($db,$file){
    $sql = "DELETE FROM docs WHERE doc_title = '$file'";
    $delete = $db->deleteData($sql);
    if($delete < 1){
        alert("File delete was incomplete!");
    }else{
        
    }
}
//==============================================================================
//==============================================================================
function getPayableAmount($db,$fee,$cat){
    $sql = "SELECT amount FROM fee_payable WHERE purpose = '$fee' AND category = '$cat'";
    if($db->countRows($sql) > 0){
        $res = $db->getData($sql);
        foreach($res as $r){
            return $r['amount'];
        }
    }else{
        return 0;
    }
}
//==============================================================================
//======================fresh fees payment======================================
function payFreshFees($db,$session,$cat){
    $application_num = $_POST['application_num'];
    $fee = $_POST['fee'];
    $sr_num = $db->cleanInput($_POST['sr_num']);
    $pin = $db->cleanInput($_POST['pin']);
    
    $semester = $_POST['semester'];
    
    $level = $db->cleanInput($_POST['level']);
    
    if(validatePin($db,$pin,$sr_num,$fee)){
            
    }else{
        alert("The pin you have entered is not valid or does not exist or it has been used! Check the pin and try again!");
        exit();
    }
    
    $amount = getPayableAmount($db,$fee,$cat);
    
    if($amount == 0){
        alert("Payment declined! Try again later!");
        exit();
    }
    
    $date = date("Y-m-d");
    
    $sql = "INSERT INTO fees (amount,pin,psr_num,application_num,purpose,session,date_paid,level,semester) VALUES ('$amount','$pin','$sr_num','$application_num','$fee','$session','$date','$level','$semester')";
    
    $insert = $db->insertData($sql);
    
    $update = $db->updateData("UPDATE pincode SET used = '1', regnum='$application_num' WHERE pin = '$pin' AND serial_num = '$sr_num'");
    
    if($insert < 1){
        alert("The server is currently unable to process your request. Try again later!");
        print $db->connection_error($sql);
        exit();
    }else{
        alert("Payment was successful!");
        redirectUrl("fees.php");
        exit();
    }
}

//==============================================================================
//=====================fetch fee records========================================
function fetchFeeRecords($db,$reg){
    $sql = "SELECT * FROM fees WHERE application_num = '$reg' ORDER BY id DESC";
    if($db->countRows($sql) > 0 ){
        $x = 0;
        $res = $db->getData($sql);
        foreach($res as $r){
            $x++;
            
            $p = $r['purpose'];
            
            $session = base64_encode($r['session']);
            
            print '<tr>
                <td>'.$x.'</td>
                <td>'.$r['application_num'].'</td>
                <td>'.$r['purpose'].'</td>
                <td>'.$r['pin'].'</td>
                <td>'.$r['psr_num'].'</td>
                <td>'.$r['date_paid'].'</td>';
                
            if($p === "Admission_Letter"){
                print '<td><a href="printAdmissionLetter.php"><button class="w3-btn w3-green w3-text-white">Print</button></td>';
            }
            if($p === "ND_SCHOOl_FEE"){
                print '<td><a href="printFee.php?session='.$session.'"><button class="w3-btn w3-green w3-text-white">Print</button></td>';
            }
            if($p === "HND_SCHOOl_FEE"){
                print '<td><a href="printFee.php"><button class="w3-btn w3-green w3-text-white">Print</button></td>';
            }
            if($p === "BSC_SCHOOl_FEE"){
                print '<td><a href="printFee.php"><button class="w3-btn w3-green w3-text-white">Print</button></td>';
            }
            
            print '</tr>';
        }
    }else{
        print '<tr><td colspan="7">No records found...</td></tr>';
    }
}

//=============================================================================
function setFeePayable($db){
 $amount = cleanInput($_POST['amount']); 
 $purpose = cleanInput($_POST['purpose']); 
 $cat = cleanInput($_POST['cat']);
 
 $sql = "INSERT INTO fee_payable (amount,purpose,category) VALUES ('$amount','$purpose','$cat')";
 $insert = $db->insertData($sql);
 if($insert < 1){
     alert("The server is unable to process your request!");
     exit();
 }else{
     alert("Fee was recorded successfully!");
     redirectUrl("setFees.php");
 }
 
}
//==============================================================================
function fetchFeePayable($db){
    $sql = "SELECT * FROM fee_payable ORDER BY id DESC";
    $y = 0;
    if($db->countRows($sql) > 0){
        $results = $db->getData($sql);
        foreach($results as $r){
            $y++;
            
            print '<tr>
                <td>'.$y.'</td>
                <td>&#8358;'.number_format($r['amount']).'</td>
                <td>'.$r['purpose'].'</td>
                <td>'.$r['category'].'</td>
                <td><button class="w3-btn w3-red w3-text-white" onclick="delFeePayable('.$r['id'].');">Delete</button></td>
            </tr>';
        }
    }else{
        print '<tr><td colspan="4"></td></tr>';
    }
    
    print '<script>
        function delFeePayable(id){
            if(confirm("Are you sure you want to delete this fee record?")){
                location.assign("?delete_fee_records="+id);
            }
        }
    </script>';
}

function delFeePayable($db){
    if(isset($_GET['delete_fee_records'])){
        $fid = cleanInput($_GET['delete_fee_records']);
        
        $sql = "DELETE FROM fee_payable WHERE id = '$fid' LIMIT 1";
        
        $delete = $db->deleteData($sql);
        
        if($delete < 1){
            alert("The server is currently unable to handle your request at the moment!");
            returnUrl();
            exit();
        }else{
            alert("Fee record was deleted successfully!");
            returnUrl();
            exit();
        }
    }
}


//==============================================================================
function paginateData($db,$sql){
    $sql = "SELECT * FROM students WHERE class = '$c' AND year='$y' AND term='$t'";

        $total_list = $con->getData($sql);

        $count = $con->countRows($sql);
        
        $per_list = 9;
        
                
        $number_of_pages = ceil($count/$per_list);
        
        if($number_of_pages < 1){

            $number_of_pages = 1;

        }
        
        $page = 1;
        
        if(isset($_GET['page'])){
            $page = preg_replace('#[^0-9]#', '', $_GET['page']);
        }
        
        if($page > $number_of_pages){
            $page = $number_of_pages;
        }else if($page < 1){
            $page = 1;
        }
        
        $pagination = "";
        
        if($number_of_pages != 1){
        
        if($page > 1){
            $previous = $page-1;
            $pagination.='<a href="?page='.$previous.'"><button class="w3-btn w3-green w3-text-white">Previous</button></a>&nbsp;';
            
            for($x = $page-4; $x < $page; $x++) {
                
                if($x > 0){
                    
                $pagination.='<a href="?page='.$x.'"><button class="w3-btn w3-green w3-text-white">'.$x.'</button></a>&nbsp;';
                
                }
            }
        }
    }
        $pagination.= '<a href="?page='.$page.'">'.$page.'</a>&nbsp;';
        
        for($x = $page+1; $x <= $number_of_pages; $x++){
            $pagination.='<a href="?page='.$x.'"><button class="w3-btn w3-green w3-text-white">'.$x.'</button></a>&nbsp;';
            if($x >= $page+4){
            break;
            }
        }
        
        if($page != $number_of_pages){
            $next = $page+1;
            $pagination.='<a href="?page='.$next.'"><button class="w3-btn w3-green w3-text-white">Next</button></a>';
        }
        
        $limit = ($page - 1)*$per_list.",".$per_list;
}

//==============================================================================
function updateStdProfile($db,$reg){
    $fn = cleanInput($_POST['fn']);
    $mn = cleanInput($_POST['mn']);
    $ln = cleanInput($_POST['ln']);
    $sex = cleanInput($_POST['sex']);
    $phone = cleanInput($_POST['phone']);
    $email = cleanInput($_POST['email']);
    $dob = cleanInput($_POST['dob']);
    $lga = cleanInput($_POST['lga']);
    $state = cleanInput($_POST['state']);
    $nationality = cleanInput($_POST['nationality']);
    
    $title = $_POST['title'];
    
    // if(stdEmailExists($db,$email)){
    //     alert("Sorry, the email you provided [$email] already exists!");
    //     exit();
    // }
    
    $address = cleanInput(addslashes($_POST['address']));
    
    $sql = "UPDATE students SET fname='$fn', midname='$mn', lname='$ln', dob='$dob', phone='$phone', sex='$sex', lga='$lga', state='$state', address='$address', nationality='$nationality', title='$title' WHERE mat_num = '$reg'";
    
    $update = $db->updateData($sql);
    
    if($update < 1){
        alert("The server is unable to handle your request at the moment! Try again later!");
        //redirectUrl("myProfile.php");
        exit();
    }else{
        alert("Profile was updated successfully!");
        redirectUrl("myProfile.php");
        exit();
    }
}

function getOldPassword($db){
    $sql = "SELECT password FROM students WHERE mat_num = '$reg'";
    $res = $db->getData($sql);
    foreach($res as $r){
        return $r['password'];
    }
}

function listUploadedResults($db,$level,$semester,$session){
    print '<table class="left table-row-out stripped" style="font-size:12px">
        <tr>
            <th>#</th>
            <th>Level</th>
            <th>Dept</th>
            <th>Session</th>
            <th>Semester</th>
            <th>View</th>
        </tr>';
        
        $sql = "SELECT * FROM results WHERE level='$level' AND semester='$semester' AND session='$session' ORDER BY department DESC";
        
        $data = $db->getData($sql);
        $x = 0;
        if($db->countRows($sql) > 0){
            
            foreach($data as $d){
                
                $dept = $d['department'];
                if($dept === $dept){
                    $x++;
                    print '<tr>
                        <td>'.$x.'</td>
                        <td>'.$d['level'].'</td>
                        <td>'.$d['department'].'</td>
                        <td>'.$d['session'].'</td>
                        <td>'.$d['semester'].'</td>
                        <td><a href="listResults.php?level='.$level.'&department='.$dept.'&session='.$session.'&semester='.$semester.'" target="_blank"><button class="w3-btn w3-green">View Results</button></a></td>
                    </tr>';
                    break;
                }
                
            }
        
        }else{
            print '<tr><td colspan="6">No records found...</td></tr>';
        }
        
        
        print '</table>';
}

///////////////////////////////////////////////////
function validateResultChecker($db,$session,$category){
    $pt = $_POST['pinType'];
    $application_num = $_POST['application_num'];
    $fee = $_POST['fee'];
    $sr_num = $db->cleanInput($_POST['sr_num']);
    $pin = $db->cleanInput($_POST['pin']);
    
    $semester = $_POST['semester'];
    
    $_SESSION['resSem'] = $semester;
    
    $level = $db->cleanInput($_POST['level']);
    
    $_SESSION['resLevel'] = $level;
    
    $_SESSION['resSess'] = $session;
    
    // if(validatePin($db,$pin,$sr_num,$pt)){
            
    // }else{
    //     alert("The pin you have entered is not valid or does not exist or it has been used! Check the pin and try again!");
    //     exit();
    // }
    
    // $amount = getPayableAmount($db,$fee,$cat);
    
    // if($amount == 0){
    //     alert("Payment declined! Try again later!");
    //     exit();
    // }
    
    $date = date("Y-m-d");
    
    // $sql = "INSERT INTO fees (amount,pin,psr_num,application_num,purpose,session,date_paid,level,semester) VALUES ('$amount','$pin','$sr_num','$application_num','$fee','$session','$date','$level','$semester')";
    
    // $insert = $db->insertData($sql);
    
    $update = $db->updateData("UPDATE pincode SET used = '1', regnum='$application_num' WHERE pin = '$pin' AND serial_num = '$sr_num'");
    
    if($update < 1){
        alert("The server is currently unable to process your request. Try again later!");
        print $db->connection_error($sql);
        exit();
    }else{
        alert("Result Pin was verified successfully! You will be redirected to the result view window now...");
        print '<script>location.assign("myResult.php");</script>';
        exit();
    }
}